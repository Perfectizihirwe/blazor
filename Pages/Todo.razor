@page "/todo"
@inject TodoState TodoState
@using BlazorApp.Data


<h1>
    Todo
</h1>

<p>This is a todo app</p>

<ul>
    @foreach (var item in TodoState.Todos )
    {
        <li>
            <h4>
                @item.Title : 
            </h4>
            <p>
                @item.Description
            </p>
        </li>
    }
</ul>

<input @bind="NewToDo" @bind:event="oninput" type="text" placeholder="Task title" />

<input @bind="Description" @bind:event="oninput" type="text" placeholder="Task description" />

<button @onclick="Save" >Submit</button>

@*<EditForm Model="@NewItem" OnValidSubmit="@Save">
    <InputText id="name" @bind-Value="NewItem.Title" />
    <ValidationMessage For="@(()=>NewItem.Title)" />

    <InputText id="description" @bind-Value="NewItem.Description" />
    <ValidationMessage For="@(()=>NewItem.Description)" />

    <button type="submit">Submit</button>

    <DataAnnotationsValidator />



</EditForm>
*@

@*@if (!string.IsNullOrEmpty(NewItem.Title) && string.IsNullOrEmpty(NewItem.Description))
{
    <p>Remember to add a description</p>
}*@

@code{
    private string NewToDo { get; set; } = string.Empty;
    private string Description { get; set; } = string.Empty;

    public TodoItem NewItem = new() {};

    public List<TodoItem> ArrayOfTodos { get; set; } = new List<TodoItem>();

    private void Save()
    {
        Console.WriteLine(NewItem.Title + "qwertyuio");

        var ItemToAdd = new TodoItem()
        {
            Title = NewToDo,
            Description = Description
        };

        TodoState.Todos.Add(ItemToAdd);
        ArrayOfTodos.Add(ItemToAdd);

        NewItem.Title = string.Empty;
        NewItem.Description = string.Empty;

        NewToDo = string.Empty;
        Description = string.Empty;
    }
}